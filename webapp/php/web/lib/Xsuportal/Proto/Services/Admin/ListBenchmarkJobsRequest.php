<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: xsuportal/services/admin/benchmark.proto

namespace Xsuportal\Proto\Services\Admin;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>xsuportal.proto.services.admin.ListBenchmarkJobsRequest</code>
 */
class ListBenchmarkJobsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * optional filter by team_id
     *
     * Generated from protobuf field <code>int64 team_id = 1;</code>
     */
    private $team_id = 0;
    /**
     * return only incomplete jobs
     *
     * Generated from protobuf field <code>bool incomplete_only = 2;</code>
     */
    private $incomplete_only = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $team_id
     *           optional filter by team_id
     *     @type bool $incomplete_only
     *           return only incomplete jobs
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Xsuportal\Services\Admin\Benchmark::initOnce();
        parent::__construct($data);
    }

    /**
     * optional filter by team_id
     *
     * Generated from protobuf field <code>int64 team_id = 1;</code>
     * @return int|string
     */
    public function getTeamId()
    {
        return $this->team_id;
    }

    /**
     * optional filter by team_id
     *
     * Generated from protobuf field <code>int64 team_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTeamId($var)
    {
        GPBUtil::checkInt64($var);
        $this->team_id = $var;

        return $this;
    }

    /**
     * return only incomplete jobs
     *
     * Generated from protobuf field <code>bool incomplete_only = 2;</code>
     * @return bool
     */
    public function getIncompleteOnly()
    {
        return $this->incomplete_only;
    }

    /**
     * return only incomplete jobs
     *
     * Generated from protobuf field <code>bool incomplete_only = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncompleteOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->incomplete_only = $var;

        return $this;
    }

}

